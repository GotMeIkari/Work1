#include <stdio.h>
#include <locale.h>
#include <time.h>
#include <stdlib.h>

void swap(int* a, int* b);
void sort_bubble(int* ptrarr, int n);
void sort_select(int* ptrarr, int n);
void sort_insert(int* ptrarr, int n);

int main()
{
    setlocale(LC_ALL, "RUS");
    srand(time(NULL));

    int n = 6; 
    int* arr = (int*)malloc(n * sizeof(int));

    for (int i = 0; i < n; i++) 
    {
        arr[i] = rand() % 100;
    }

    sort_bubble(arr, n);
    printf("Сортировка пузырьком: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    int* arr2 = (int*)malloc(n * sizeof(int));
    for (int i = 0; i < n; i++) {
        arr2[i] = arr[i];
    }
    sort_select(arr2, n);
    printf("Сортировка простым выбором: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr2[i]);
    }
    printf("\n");

    int* arr3 = (int*)malloc(n * sizeof(int));
    for (int i = 0; i < n; i++) {
        arr3[i] = arr[i];
    }
    sort_insert(arr3, n);
    printf("Сортировка со вставками: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr3[i]);
    }
    printf("\n");

    clock_t t;
    t = clock();

    double time = (clock() - t) * 1.0 / CLOCKS_PER_SEC;
    printf("Время выполнения алгоритма: %f секунд\n", time);

    free(arr);
    free(arr2);
    free(arr3);

    return 0;
}

void sort_insert(int* ptrarr, int n)
{
    for (int i = 1; i < n; i++)
    {
        int key = ptrarr[i];
        int j = i - 1;
        while (j >= 0 && ptrarr[j] > key)
        {
            ptrarr[j + 1] = ptrarr[j];
            j--;
        }
        ptrarr[j + 1] = key;
    }
}

void sort_select(int* ptrarr, int n)
{
    for (int i = 0; i < n - 1; i++)
    {
        int min_index = i;
        for (int j = i + 1; j < n; j++)
        {
            if (ptrarr[j] < ptrarr[min_index])
            {
                min_index = j;
            }
        }
        if (min_index != i)
        {
            swap(&ptrarr[i], &ptrarr[min_index]);
        }
    }
}

void sort_bubble(int* ptrarr, int n)
{
    for (int i = 0; i < n - 1; i++)
    {
        for (int j = 0; j < n - i - 1; j++)
        {
            if (ptrarr[j] > ptrarr[j + 1])
            {
                swap(&ptrarr[j], &ptrarr[j + 1]);
            }
        }
    }
}

void swap(int* a, int* b)
{
    int temp = *a;
    *a = *b;
    *b = temp;
}

#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <locale.h>
void sort_insert(int* arr, int size);
int* full_array(int size);
void put_array(int* arr, int size);

int main() 
{
    setlocale(LC_ALL, "RUS");
    int size;
    printf("Введите размер массива: ");
    scanf("%d", &size);

    int* arr = full_array(size);

    printf("Исходный массив:\n");
    put_array(arr, size);

    int t = clock();
    sort_insert(arr, size);
    int elapsed_time = (clock() - t) * 1.0 / CLOCKS_PER_SEC;
    printf("Время сортировки: %d секунд\n", elapsed_time);

    free(arr);
    return 0;
}

int* full_array(int size) {
    int* arr = (int*)malloc(size * sizeof(int));
    for (int i = 0; i < size; i++) {
        arr[i] = rand() % 100;
    }
    return arr;
}

void put_array(int* arr, int size) {
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

void sort_insert(int* arr, int size) {
    for (int i = 1; i < size; i++) {
        int key = arr[i];
        int j = i - 1;
        while (j >= 0 && arr[j] > key) {
            arr[j + 1] = arr[j];
            j--;
        }
        arr[j + 1] = key;
    }
}
