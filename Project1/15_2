#include <locale.h>
#include <stdio.h>
#include <stdlib.h>
#define N 7
#define M 7

int rand_massive(int massive[N][M]);
int transp_massive(int rez_massive[N][M], int massive[N][M]);
int calculate_six(int massive[N][M]);
int equals_finder(int massive[N][M]);
int

int main()
{
    setlocale(LC_CTYPE, "RUS");
    int massive[N][M];
    int rez_massive[N][M];
    
    rand_massive(massive);
    printf("\n");
    transp_massive(rez_massive, massive);
    printf("\n");
    calculate_six(massive);
    printf("\n");
    equals_finder(massive);
    printf("\n");
}

int rand_massive(int massive[N][M]) {
    printf("ИСХОДНЫЙ МАССИВ\n");
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            massive[i][j] = -10 + rand() % (10 - (-10) + 1);
        }
    }
    
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            printf("| %3d ", massive[i][j]);
        }
        printf("|\n");
    }
}

int transp_massive(int rez_massive[N][M], int massive[N][M]) {
    
    printf("ТРАНСПОНИРОВАННЫЙ МАССИВ\n");
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            rez_massive[i][j] = massive[j][i];
        }
    }
    
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            printf("| %3d ", rez_massive[i][j]);
        }
        printf("|\n");
    }
}

int calculate_six(int massive[N][M]) {
    int summ_rez = 0;
    int counter = 0;
    
    for (int j = 0;  j < M; j++) {
        if (massive[4][j] % 3 == 0) {
            summ_rez += massive[4][j];
            counter++;
        }
    }

    printf("Среднее арифметическое эл-тов четвёртой строки, кратных трём: %d", summ_rez / counter);
}

int equals_finder(int massive[N][M]) {
    int equals_counter = 0;
    
    for (int i = 0; i < N - 1; i++) {
        for (int j = 0; j < M; j++) {
            if (massive[i][j] == massive[i + 1][j]) {
                equals_counter++;
            }
        }
    }
    printf("Количество пар равных соседних эл-тов в столбцах равно: %d", equals_counter);
}
